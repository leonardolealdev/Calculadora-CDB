{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass CalculadoraCdbService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this._baseURL = \"\";\n    this._baseURL = baseUrl;\n  }\n  calcular(valor, prazo) {\n    return this.http.post(this._baseURL + `weatherforecast`, {\n      valor: valor,\n      prazo: prazo\n    }).subscribe(resp => {}, error => console.error(error));\n  }\n}\nCalculadoraCdbService.ɵfac = function CalculadoraCdbService_Factory(t) {\n  return new (t || CalculadoraCdbService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nCalculadoraCdbService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CalculadoraCdbService,\n  factory: CalculadoraCdbService.ɵfac,\n  providedIn: 'root'\n});\nexport { CalculadoraCdbService };","map":{"version":3,"mappings":";;AAGA,MAGaA,qBAAqB;EAEhCC,YAAoBC,IAAgB,EAAsBC,OAAe;IAArD,KAAAD,IAAI,GAAJA,IAAI;IADjB,KAAAE,QAAQ,GAAG,EAAE;IAGlB,IAAI,CAACA,QAAQ,GAAGD,OAAO;EACzB;EAGAE,QAAQA,CAACC,KAAU,EAAEC,KAAU;IAC7B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACJ,QAAQ,GAAG,iBAAiB,EAAE;MAAEE,KAAK,EAAEA,KAAK;MAAEC,KAAK,EAAEA;IAAK,CAAE,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG,CAAG,CAAC,EAAEC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAE;EACjJ;;;mBAVWX,qBAAqB,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAEc,UAAU;AAAA;;SAF7Cd,qBAAqB;EAAAiB,OAAA,EAArBjB,qBAAqB,CAAAkB,IAAA;EAAAC,UAAA,EAFpB;AAAM;SAEPnB,qBAAqB","names":["CalculadoraCdbService","constructor","http","baseUrl","_baseURL","calcular","valor","prazo","post","subscribe","resp","error","console","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["C:\\Git\\CalculadoraCDB\\CalculadoraCDB\\ClientApp\\src\\app\\services\\calculadora-cdb.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CalculadoraCdbService {\r\n  public _baseURL = \"\";\r\n  constructor(private http: HttpClient, @Inject('BASE_URL') baseUrl: string)\r\n  {\r\n    this._baseURL = baseUrl;     \r\n  }\r\n\r\n\r\n  calcular(valor: any, prazo: any) {\r\n    return this.http.post(this._baseURL + `weatherforecast`, { valor: valor, prazo: prazo }).subscribe(resp => { }, error => console.error(error) );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}