{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction CalculadoraCdbComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"h3\");\n    i0.ɵɵtext(2, \"Resultados:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Resultado Bruto: \", i0.ɵɵpipeBind1(5, 2, ctx_r0.resultadoBruto), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Resultado L\\u00EDquido: \", i0.ɵɵpipeBind1(8, 4, ctx_r0.resultadoLiquido), \"\");\n  }\n}\nclass CalculadoraCdbComponent {\n  //valor: number = 0;\n  //prazo: number = 0;\n  //resultadoBruto: number = 0;\n  //resultadoLiquido: number = 0;\n  //private toastr: ToastrService;\n  //private calculadoraCdbService: CalculadoraCdbService;\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => console.error(error));\n  }\n}\nCalculadoraCdbComponent.ɵfac = function CalculadoraCdbComponent_Factory(t) {\n  return new (t || CalculadoraCdbComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nCalculadoraCdbComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CalculadoraCdbComponent,\n  selectors: [[\"app-calculadora-cdb\"]],\n  decls: 17,\n  vars: 3,\n  consts: [[1, \"container\", \"my-5\"], [1, \"row\", \"justify-content-center\", \"align-items-center\"], [1, \"col-sm-4\", \"col-md-4\", \"col-lg-4\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"valor\"], [\"type\", \"number\", \"id\", \"valor\", \"name\", \"valor\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"prazo\"], [\"type\", \"text\", \"id\", \"prazo\", \"name\", \"prazo\", \"min\", \"2\", \"onkeyup\", \"onlyNumbers(this)\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"my-2\"], [\"class\", \"result\", 4, \"ngIf\"], [1, \"result\"]],\n  template: function CalculadoraCdbComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h2\");\n      i0.ɵɵtext(4, \"C\\u00E1lculo do CDB\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function CalculadoraCdbComponent_Template_form_ngSubmit_5_listener() {\n        return ctx.calcularCDB();\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Valor Monet\\u00E1rio:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function CalculadoraCdbComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.valor = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n      i0.ɵɵtext(12, \"Prazo em Meses:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function CalculadoraCdbComponent_Template_input_ngModelChange_13_listener($event) {\n        return ctx.prazo = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"button\", 9);\n      i0.ɵɵtext(15, \"Calcular\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(16, CalculadoraCdbComponent_div_16_Template, 9, 6, \"div\", 10);\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.valor);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.prazo);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.resultadoBruto && ctx.resultadoLiquido);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm, i2.CurrencyPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { CalculadoraCdbComponent };","map":{"version":3,"mappings":"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","names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ɵɵpipeBind1","ctx_r0","resultadoBruto","resultadoLiquido","CalculadoraCdbComponent","constructor","http","baseUrl","forecasts","get","subscribe","result","error","console","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","CalculadoraCdbComponent_Template","rf","ctx","ɵɵlistener","CalculadoraCdbComponent_Template_form_ngSubmit_5_listener","calcularCDB","CalculadoraCdbComponent_Template_input_ngModelChange_9_listener","$event","valor","CalculadoraCdbComponent_Template_input_ngModelChange_13_listener","prazo","ɵɵtemplate","CalculadoraCdbComponent_div_16_Template","ɵɵproperty"],"sourceRoot":"","sources":["C:\\Git\\CalculadoraCDB\\CalculadoraCDB\\ClientApp\\src\\app\\calculadora-cdb\\calculadora-cdb.component.html","C:\\Git\\CalculadoraCDB\\CalculadoraCDB\\ClientApp\\src\\app\\calculadora-cdb\\calculadora-cdb.component.ts"],"sourcesContent":["<div class=\"container my-5\">\r\n  <div class=\"row justify-content-center align-items-center\">\r\n    <div class=\"col-sm-4 col-md-4 col-lg-4\">\r\n      <h2>Cálculo do CDB</h2>\r\n      <form (ngSubmit)=\"calcularCDB()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"valor\">Valor Monetário:</label>\r\n          <input type=\"number\" class=\"form-control\" id=\"valor\" [(ngModel)]=\"valor\" name=\"valor\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"prazo\">Prazo em Meses:</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"prazo\" [(ngModel)]=\"prazo\" name=\"prazo\" min=\"2\" onkeyup=\"onlyNumbers(this)\" required>\r\n        </div>\r\n        <button type=\"submit\" class=\"btn btn-primary my-2\">Calcular</button>\r\n      </form>\r\n\r\n      <div class=\"result\" *ngIf=\"resultadoBruto && resultadoLiquido\">\r\n        <h3>Resultados:</h3>\r\n        <p>Resultado Bruto: {{ resultadoBruto | currency }}</p>\r\n        <p>Resultado Líquido: {{ resultadoLiquido | currency }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CalculadoraCdbService } from '../services/calculadora-cdb.service';\r\nimport { catchError, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-calculadora-cdb',\r\n  templateUrl: './calculadora-cdb.component.html',\r\n  styleUrls: ['./calculadora-cdb.component.css']\r\n})\r\nexport class CalculadoraCdbComponent {\r\n  public forecasts: WeatherForecast[] = [];\r\n\r\n  //valor: number = 0;\r\n  //prazo: number = 0;\r\n  //resultadoBruto: number = 0;\r\n  //resultadoLiquido: number = 0;\r\n\r\n  //private toastr: ToastrService;\r\n  //private calculadoraCdbService: CalculadoraCdbService;\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n      this.forecasts = result;\r\n    }, error => console.error(error));\r\n  }\r\n\r\n\r\n  //calcularCDB() {\r\n  //  if (!this.camposValidos()) return;\r\n\r\n  //  this.calculadoraCdbService.calcular(this.valor, this.prazo)\r\n  //    .pipe(\r\n  //      catchError((error) => {\r\n  //        this.toastr.error('', 'Erro ao calcular');\r\n  //        return of(null);\r\n  //      })\r\n  //    )\r\n  //    .subscribe((data: any) => {\r\n  //      console.log(data)\r\n  //      this.resultadoBruto = data.data.valorBruto;\r\n  //      this.resultadoLiquido = data.data.valorLiquido;\r\n  //    });\r\n  //}\r\n\r\n  //camposValidos(): boolean {\r\n  //  if (this.prazo < 1) {\r\n  //    this.toastr.warning(\"Prazo deve ser maior que 1\");\r\n  //    return false;\r\n  //  }\r\n\r\n  //  if (this.valor < 0) {\r\n  //    this.toastr.warning(\"Valor deve ser positivo\");\r\n  //    return false;\r\n  //  }\r\n\r\n  //  return true;\r\n  //}\r\n}\r\n\r\ninterface WeatherForecast {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}